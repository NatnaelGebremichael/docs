const id = "inventory-managment/aws-guide.mdx";
						const collection = "docs";
						const slug = "inventory-managment/aws-guide";
						const body = "\r\nimport { Steps } from '@astrojs/starlight/components';\r\n\r\n### Connect to VM\r\n\r\n1. Connect to EC2 Instance via EC2 Instance Connec\r\n\r\n\r\n\r\n### Install Node Version Manager (nvm) and Node.js\r\n\r\n<Steps>\r\n\r\n1. Switch to superuser and install nvm:\r\n\r\n    ```js\r\n    sudo su -\r\n    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash\r\n    ```\r\n2. Activate nvm:\r\n\r\n    ```bash\r\n    . ~/.nvm/nvm.sh\r\n    ```\r\n\r\n3. Install the latest version of Node.js using nvm:\r\n\r\n    ```bash\r\n    nvm install node\r\n    ```\r\n\r\n4. Verify that Node.js and npm are installed:\r\n\r\n    ```bash\r\n    node -v\r\n    npm -v\r\n    ```\r\n</Steps>\r\n\r\n## Install Git\r\n\r\n<Steps>\r\n\r\n1. Update the system and install Git:\r\n\r\n    ```\r\n    sudo yum update -y\r\n    sudo yum install git -y\r\n    ```\r\n\r\n2. Check Git version:\r\n\r\n    ```\r\n    git --version\r\n    ```\r\n\r\n3.  Clone your code repository from GitHub:\r\n\r\n    ```\r\n    git clone [your-github-link]\r\n    ```\r\n\r\n4. Navigate to the directory and install packages:\r\n\r\n    ```\r\n    cd inventory-management\r\n    npm i\r\n    ```\r\n\r\n5. Create Env File and Port 80:\r\n\r\n    ```\r\n    echo \"PORT=80\" > .env\r\n    ```\r\n\r\n6. Start the application:\r\n\r\n    ```\r\n    npm start\r\n    ```\r\n</Steps>\r\n\r\n### Install pm2 (Production Process Manager for Node.js)\r\n\r\n<Steps>\r\n\r\n1. Install pm2 globally:\r\n\r\n    ```bash\r\n    npm i pm2 -g\r\n    ```\r\n\r\n2. Create a pm2 ecosystem configuration file (inside server directory):\r\n\r\n    ```bash\r\n    module.exports = { apps : [{ name: 'inventory-management', script: 'npm', args: 'run dev', env: { NODE_ENV: 'development', ENV_VAR1: 'environment-variable', } }], };\r\n    ```\r\n\r\n3. Modify the ecosystem file if necessary:\r\n\r\n    ```bash\r\n    nano ecosystem.config.js\r\n    ```\r\n\r\n4. Set pm2 to restart automatically on system reboot:\r\n\r\n    ```bash\r\n    sudo env PATH=$PATH:$(which node) $(which pm2) startup systemd -u $USER --hp $(eval echo ~$USER)\r\n    ```\r\n\r\n5. Start the application using the pm2 ecosystem configuration:\r\n\r\n    ```\r\n    pm2 start ecosystem.config.js\r\n    ```\r\n</Steps>\r\n\r\n\r\n## Useful pm2 commands:\r\n\r\n1. Stop all processes:\r\n\r\n    ```\r\n    pm2 stop all\r\n    ```\r\n\r\n2. Delete all processes:\r\n\r\n    ```\r\n    pm2 delete all\r\n    ```\r\n\r\n3. Check status of processes:\r\n\r\n    ```\r\n    pm2 status\r\n    ```\r\n\r\n4. Monitor processes:\r\n\r\n    ```\r\n    pm2 monit\r\n    ```";
						const data = {title:"AWS Guide",description:"A guide to setup EC2 Instructions.",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true,draft:false};
						const _internal = {
							type: 'content',
							filePath: "C:/Personal projects/docs/src/content/docs/inventory-managment/aws-guide.mdx",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
