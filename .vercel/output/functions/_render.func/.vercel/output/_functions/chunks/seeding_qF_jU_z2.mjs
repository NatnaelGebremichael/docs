const id = "inventory-managment/seeding.mdx";
						const collection = "docs";
						const slug = "inventory-managment/seeding";
						const body = "\r\nimport { Steps } from '@astrojs/starlight/components';\r\n\r\n## Prepare your DATABASE_URL\r\n\r\n<Steps>\r\n\r\n1. Go to https://www.urlencoder.org/\r\n2. Paste your database password into the encoder\r\n3. Copy the encoded password\r\n4. DATABASE_URL: `DATABASE_URL=\"postgresql://postgres:<encoded-password>@localhost:5432/inventorymanagment\"`\r\n5. Update your `.env` with DB URL. Replace `<encoded-password>` with the encoded password.\r\n\r\n</Steps>\r\n\r\n### Seeding Steps\r\n\r\n<Steps>\r\n\r\n1. Generate Prisma client: `npx prisma generate`\r\n2. If you're starting fresh or want to reset the database: `npx prisma migrate reset` \r\n3. If the database schema already exists and you want to apply new changes: `npx prisma migrate dev --name init_new_schema`\r\n4. Run the seeding script: `npm run seed`\r\n\r\n</Steps>\r\n\r\n\r\n### Updated Schema Relationships and Logic\r\n\r\n##### 1. User\r\n\r\n- Central entity representing employees or system users\r\n- Relationships:\r\n\r\n  - One-to-Many with Sale (as seller)\r\n  - One-to-Many with Purchase (as purchaser)\r\n  - One-to-Many with Expense (as expense creator)\r\n  - One-to-One with Employment\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 2. Product\r\n\r\n-  Represents items sold by the business\r\n-  Relationships:\r\n\r\n   - One-to-Many with Sale\r\n   - One-to-Many with Purchase\r\n   - One-to-Many with Waste\r\n\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 3. Category\r\n\r\n- Represents expense categories\r\n- Relationships:\r\n\r\n   - One-to-Many with Expense\r\n   - One-to-Many with ExpenseCategoryBreakdown\r\n\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n\r\n### Transactional Entities\r\n\r\n##### 4. Sale\r\n\r\n- Represents individual sales transactions\r\n- Relationships:\r\n\r\n   - Many-to-One with User (seller)\r\n   - Many-to-One with Product\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 5. Purchase\r\n\r\n- Represents inventory purchases\r\n- Relationships:\r\n\r\n   - Many-to-One with User (purchaser)\r\n   - Many-to-One with Product\r\n\r\n- Includes payment type (DEBT/PAID) and payment status\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 6. Expense\r\n\r\n- Represents business expenses\r\n- Relationships:\r\n\r\n   - Many-to-One with User (expense creator)\r\n   - Many-to-One with Category\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 7. Waste\r\n\r\n- Tracks product waste\r\n- Relationships:\r\n\r\n   - Many-to-One with Product\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n### Employee Management\r\n\r\nEmployment\r\n\r\n##### 8. Stores employee contract details\r\n\r\n- Relationships:\r\n\r\n   - One-to-One with User\r\n   - One-to-Many with Leave\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n##### 9. Leave\r\n\r\n- Tracks employee leave\r\n- Relationships:\r\n\r\n   - Many-to-One with Employment\r\n\r\n- Includes soft delete and timestamp fields\r\n\r\n\r\n\r\n### Summary Entities\r\n\r\n##### 10. SalesSummary\r\n\r\n- Aggregates sales data for reporting\r\n- Includes sourceDataHash for data integrity\r\n- Includes timestamp fields\r\n\r\n\r\n##### 11. PurchaseSummary\r\n\r\n- Aggregates purchase data for reporting\r\n- Includes sourceDataHash for data integrity\r\n- Includes timestamp fields\r\n\r\n\r\n##### 12. ExpenseSummary\r\n\r\n- Aggregates expense data for reporting\r\n- Relationships:\r\n\r\n  - One-to-Many with ExpenseCategoryBreakdown\r\n- Includes sourceDataHash for data integrity\r\n- Includes timestamp fields\r\n\r\n\r\n##### 13. ExpenseCategoryBreakdown\r\n\r\n- Provides detailed expense breakdown by category\r\n- Relationships:\r\n\r\n  - Many-to-One with ExpenseSummary\r\n  - Many-to-One with Category\r\n\r\n\r\n### Key Changes\r\n\r\n- All entities now include createdAt, updatedAt, and deletedAt fields for better auditing and soft delete functionality\r\n- Summary tables include sourceDataHash for data integrity verification\r\n- All monetary values are assumed to be in Ethiopian Birr (no separate currency field needed)";
						const data = {title:"How to Seed",editUrl:true,head:[],template:"doc",sidebar:{hidden:false,attrs:{}},pagefind:true,draft:false};
						const _internal = {
							type: 'content',
							filePath: "C:/Personal projects/docs/src/content/docs/inventory-managment/seeding.mdx",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
